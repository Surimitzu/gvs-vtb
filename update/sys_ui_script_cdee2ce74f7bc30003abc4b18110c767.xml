<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>original source: http://sroze.github.io/ngInfiniteScroll/#&#13;
modified to conform to the SP page structure, where the window is not scrollable, but the section.page is the main scrolling element.</description>
        <global>false</global>
        <name>x_52098_gvs_vtb.gvs-infinite-scroll.js</name>
        <script><![CDATA[angular.module('gvsUiScroll', [])
	.directive('gvsInfiniteScroll', ['$rootScope', '$window', '$timeout',
		function ($rootScope, $window, $timeout) {
			return {
				link: function (scope, elem, attrs) {
					var checkWhenEnabled, handler, scrollDistance, scrollEnabled;
					$window = angular.element('section.page');
					scrollDistance = 0;
					if (attrs.infiniteScrollDistance != null) {
						scope.$watch(attrs.infiniteScrollDistance, function (value) {
							return scrollDistance = parseInt(value, 10);
						});
					}
					scrollEnabled = true;
					checkWhenEnabled = false;
					if (attrs.infiniteScrollDisabled != null) {
						scope.$watch(attrs.infiniteScrollDisabled, function (value) {
							scrollEnabled = !value;
							if (scrollEnabled && checkWhenEnabled) {
								checkWhenEnabled = false;
								return handler();
							}
						});
					}
					handler = function () {						
						var shouldScroll;
						var scrollHeight = angular.element('section.page')[0].scrollHeight;
						var $page = angular.element('section.page');
						shouldScroll = scrollHeight == $page.scrollTop() + $page.height();						
						if (shouldScroll && scrollEnabled) {
							if ($rootScope.$$phase) {
								return scope.$eval(attrs.gvsInfiniteScroll);
							} else {
								return scope.$apply(attrs.gvsInfiniteScroll);
							}
						} else if (shouldScroll) {
							return checkWhenEnabled = true;
						}
					};
					$window.on('scroll', handler);
					scope.$on('$destroy', function () {
						return $window.off('scroll', handler);
					});
					return $timeout((function () {
						if (attrs.infiniteScrollImmediateCheck) {
							if (scope.$eval(attrs.infiniteScrollImmediateCheck)) {
								return handler();
							}
						} else {
							return handler();
						}
					}), 0);
				}
			};
  }
]);
]]></script>
        <script_name>gvs-infinite-scroll.js</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-27 12:35:23</sys_created_on>
        <sys_id>cdee2ce74f7bc30003abc4b18110c767</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>x_52098_gvs_vtb.gvs-infinite-scroll.js</sys_name>
        <sys_package display_value="[GVS] Visual Task Board" source="x_52098_gvs_vtb">933abc014f3b070003abc4b18110c713</sys_package>
        <sys_policy/>
        <sys_scope display_value="[GVS] Visual Task Board">933abc014f3b070003abc4b18110c713</sys_scope>
        <sys_update_name>sys_ui_script_cdee2ce74f7bc30003abc4b18110c767</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-28 13:30:57</sys_updated_on>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
