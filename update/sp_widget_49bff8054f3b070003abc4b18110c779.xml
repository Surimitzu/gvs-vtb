<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function (spUtil, $scope, $http, gvsVtbTaskService) {
	/* widget controller */
	var c = this;
	c.data.tasks = [];
	c.isLoading = false;
	//add record watcher for selected table and filter
	//refresh the data when any update/insert/delete occurs
	if (c.data.isValid) {
		spUtil.recordWatch($scope, c.data.tableName, c.data.filter, function (name, data) {
			c.server.refresh();
		});
	}
	
	//reload data when new filter obtained
	$scope.$on('gvs.vtb.update_query', function(event, obj){
		c.data.tasks = [];
		c.data.filter = obj;
		c.fetchAdditionalData();
	});

	
	//calls when reaching the end of the page
	//will fetch additional task records from the server
	/*c.fetchAdditionalData = function(){	
		c.isLoading = true;
		c.loadingDisabled = true;
		var config = {
			params: {
				sysparm_query: c.data.filter + '^ORDERBYDESCnumber',
				sysparm_limit: c.options.limit,
				sysparm_fields: 'number, short_description, priority, assigned_to, state, sys_id',
				sysparm_offset: c.data.tasks.length,
				sysparm_display_value: 'all'
			}
		}
		$http.get('/api/now/table/' + c.data.tableName, config).then(
		function(response){
			c.isLoading = false;
			//no more records fetched
			if (response.data.result.length == 0){
				c.loadingDisabled = true;
				return;
			}
			c.data.tasks = c.data.tasks.concat(response.data.result);
			c.loadingDisabled = false;
		});	
	}*/
	c.fetchAdditionalData = function(){
		c.isLoading = true;
		c.loadingDisabled = true;
		gvsVtbTaskService.appendTasks(c.data.tableName, c.data.filter, c.data.tasks.length, c.options.limit).then(
			function(response){
				c.data.tasks = gvsVtbTaskService.tasks;
				c.loadingDisabled = false;
				c.isLoading = false;
				if (response.data.result.length == 0){
					c.loadingDisabled = true;
				}
			}
	);
	} 
	
	c.fetchAdditionalData();
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.gvs-task-card {
	height: 10em;
  overflow: hidden;
  text-overflow: ellipsis;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data>{
	"options":{
		"table_name": "incident",
			"filter" : "active=true",
				"limit": 10
	}
}</demo_data>
        <description>Display task records as cards.&#13;
The table name and filter is provided by url params table &amp; filter</description>
        <docs/>
        <field_list>title</field_list>
        <has_preview>true</has_preview>
        <id>gvs-vtb-task-list</id>
        <internal>false</internal>
        <link/>
        <name>GVS_VTB Task List</name>
        <option_schema>[{"hint":"Specify maximum number of entries to fetch","name":"limit","default_value":"10","label":"Number of records to display","type":"integer"},{"name":"show_label","default_value":"true","label":"Show table name","type":"boolean"},{"displayValue":"Page","hint":"The view used for displaying the modal form of selected task record","name":"form_view","default_value":"ess","label":"Form view","type":"string","value":"sp_page","ed":{"reference":"sp_page"}}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {

	//read url params
	data.tableName = $sp.getParameter('table') || options.table_name;
	data.filter = $sp.getParameter('filter') || options.filter || '';
	var limit = options.limit || 10;
	//check the empty page in designer
	if (gs.nil($sp.getParameter('id'))){
		data.tableName = 'incident';
	}

	//check the tablename and its label
	data.isValid = false;
	var dbObjectGR = new GlideRecord('sys_db_object');
	if (dbObjectGR.get('name', data.tableName)){
		data.isValid = true;
		data.label = dbObjectGR.getValue('label');
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-19 19:21:34</sys_created_on>
        <sys_id>49bff8054f3b070003abc4b18110c779</sys_id>
        <sys_mod_count>195</sys_mod_count>
        <sys_name>GVS_VTB Task List</sys_name>
        <sys_package display_value="[GVS] Visual Task Board" source="x_52098_gvs_vtb">933abc014f3b070003abc4b18110c713</sys_package>
        <sys_policy/>
        <sys_scope display_value="[GVS] Visual Task Board">933abc014f3b070003abc4b18110c713</sys_scope>
        <sys_update_name>sp_widget_49bff8054f3b070003abc4b18110c779</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-31 12:29:03</sys_updated_on>
        <template><![CDATA[<div ng-if="!data.isValid" class="alert alert-danger">
	<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;
</button> ${gvs.vtb.widget.task_list.no_table_specified}
</div>

<div ng-if="data.isValid" class="container-fluid m-t">
	<h1 ng-if="options.show_label === 'true'">
		{{::data.label}}
	</h1>

	<div ng-if="data.tasks.length == 0 && !c.isLoading" class="well well-lg">
		${gvs.vtb.widget.task_list.no_records_found}
	</div>

	<div ng-if="data.tasks.length>0" class="row" gvs-infinite-scroll="c.fetchAdditionalData()" infinite-scroll-disabled="c.loadingDisabled">
		<div class="col-md-4 col-sm-6" ng-repeat="task in data.tasks">
			<gvs-vtb-task-card task="task" table="c.data.tableName" view="c.options.form_view"></gvs-vtb-task-card>
		</div>
	</div>
  <div class="well" ng-show="c.isLoading">
    <h4><i class="fa fa-spinner fa-spin fa-2x fa-fw"></i> ${Loading...}</h4>
</div>

</div>
]]></template>
    </sp_widget>
</record_update>
